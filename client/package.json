{
  "name": "madison",
  "version": "3.0.0-alpha",
  "description": "Madison is an open-source, collaborative document editing platform.  While Madison can be used to collaborate on many different kinds of documents, the official version is being built with legislative and policy documents in mind.",
  "main": "",
  "repository": {
    "type": "git",
    "url": "https://github.com/opengovfoundation/madison.git"
  },
  "author": "The OpenGov Foundation",
  "license": "GPL-3.0",
  "bugs": {
    "url": "https://github.com/opengovfoundation/madison/issues"
  },
  "homepage": "http://mymadison.io",
  "engine": "node 0.12.7",
  "devDependencies": {
    "bless": "3.0.3",
    "breakpoint-sass": "^2.7.0",
    "chai": "^1.9.1",
    "copyfiles": "latest",
    "cssmin": "latest",
    "hashmark": "latest",
    "include-all": "^0.1.6",
    "karma": "^0.12.21",
    "karma-chai": "^0.1.0",
    "karma-mocha": "^0.1.7",
    "karma-phantomjs-launcher": "^0.1.4",
    "karma-sinon": "^1.0.3",
    "mocha": "^1.21.4",
    "protractor": "3.0.0",
    "replaceinfiles": "latest",
    "rimraf": "latest",
    "sinon": "^1.10.3",
    "uglify-js": "latest",
    "wr": "^1.3.1"
  },
  "dependencies": {
    "angular": "~1.4.8",
    "angular-animate": "~1.4.8",
    "angular-bootstrap-datetimepicker": "~0.4.0",
    "angular-bootstrap-npm": "0.14.3",
    "angular-cookie": "~4.0.9",
    "angular-cookies": "~1.4.8",
    "angular-growl-v2": "~0.7.5",
    "angular-i18n": "~1.5.0",
    "angular-mocks": "~1.4.8",
    "angular-resource": "~1.4.8",
    "angular-route": "~1.4.8",
    "angular-sanitize": "~1.4.8",
    "angular-select2": "1.4.2",
    "angular-timeago": "~0.2.4",
    "angular-translate": "~2.8.1",
    "angular-translate-interpolation-messageformat": "~2.8.1",
    "angular-translate-loader-static-files": "~2.8.1",
    "angular-ui-router": "~0.2.15",
    "angular-ui-select2": "~0.0.5",
    "angulartics": "~0.19.0",
    "bootstrap-sass": "3.3.3",
    "breakpoint": "at-import/breakpoint#2.x.x",
    "cssmin": "^0.4.3",
    "font-awesome": "~4.2.0",
    "jquery": "~2.1.3",
    "moment": "~2.10.2",
    "ng-file-upload": "~3.2.4",
    "pagedown": "~1.1.0",
    "pagedown-editor": "0.0.9",
    "select2": "~3.5.0",
    "ui-select": "^0.14.9",
    "underscore": "~1.7.0",
    "zeroclipboard": "~2.0.1"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\"",
    "clean:js": "rimraf build/app.js && rimraf build/annotator.js && rimraf build/angular.js && rimraf app/buid/components.js",
    "clean:css": "rimraf build/css/",
    "clean:html": "rimraf build/index.html",
    "clean": "rimraf build/*",
    "setup": "mkdir -p build/css",
    "compile:css": "compass compile --force",
    "compile": "npm run compile:css",
    "concat:css": "cat node_modules/angular-growl-v2/build/angular-growl.min.css app/vendor/pagedown/assets/demo.css app/vendor/datetimepicker/datetimepicker.css app/vendor/jquery/jquery-ui-smoothness.css node_modules/ui-select/dist/select.css node_modules/select2/select2.css app/vendor/annotator/annotator.min.css app/css/style.css > build/css/app.css",
    "concat:componentsjs": "cat node_modules/jquery/dist/jquery.js node_modules/select2/select2.js node_modules/bootstrap-sass/assets/javascripts/bootstrap.js node_modules/pagedown/Markdown.Converter.js node_modules/pagedown/Markdown.Sanitizer.js node_modules/pagedown-editor/Markdown.Editor.js node_modules/underscore/underscore.js node_modules/zeroclipboard/dist/ZeroClipboard.js node_modules/moment/moment.js > build/components.js",
    "concat:angularjs": "cat node_modules/angular/angular.min.js node_modules/angular-route/angular-route.min.js node_modules/angular-i18n/angular-locale_en-us.js node_modules/angulartics/dist/angulartics.min.js node_modules/angulartics/dist/angulartics-ga.min.js node_modules/angular-animate/angular-animate.min.js node_modules/angular-bootstrap-npm/dist/angular-bootstrap-tpls.js node_modules/ui-select/dist/select.js node_modules/angular-bootstrap-datetimepicker/src/js/datetimepicker.js node_modules/angular-cookie/angular-cookie.min.js node_modules/ng-file-upload/dist/angular-file-upload-shim.min.js node_modules/ng-file-upload/dist/angular-file-upload.min.js node_modules/angular-growl-v2/build/angular-growl.min.js node_modules/angular-resource/angular-resource.min.js node_modules/angular-sanitize/angular-sanitize.js node_modules/angular-timeago/src/timeAgo.js node_modules/angular-ui-router/release/angular-ui-router.min.js node_modules/angular-translate/dist/angular-translate.min.js node_modules/angular-translate-loader-static-files/angular-translate-loader-static-files.min.js node_modules/messageformat/messageformat.js node_modules/angular-translate-interpolation-messageformat/angular-translate-interpolation-messageformat.min.js > build/angular.js",
    "concat:annotatorjs": "cat app/vendor/showdown/showdown.js app/vendor/annotator/annotator-full.min.js app/js/globals.js app/js/annotator-madison.js > build/annotator.js",
    "concat:appjs": "cat app/js/constants.js app/js/controllers.js app/js/controllers/* app/js/directives.js app/js/directives/* app/js/filters.js app/js/filters/* app/js/modules/* app/js/resources.js app/js/resources/* app/js/services.js app/js/services/* app/js/app.js app/js/routes.js > build/app.js",
    "concat:js": "npm run concat:componentsjs && npm run concat:angularjs && npm run concat:annotatorjs && npm run concat:appjs",
    "concat": "npm run concat:css && npm run concat:js",
    "minify:js": "uglifyjs build/app.js -o build/app.min.js && uglifyjs build/angular.js -o build/angular.min.js && uglifyjs build/annotator.js -o build/annotator.min.js && uglifyjs build/components.js -o build/components.min.js && npm run clean:js",
    "minify:css": "cssmin < build/css/app.css > build/css/app.min.css && blessc --no-cache-buster -f build/css/app.min.css && rimraf build/css/app.css",
    "minify": "npm run minify:js && npm run minify:css",
    "copy:locales": "cp -r app/locales build/locales",
    "copy:templates": "cp -r app/templates build/templates",
    "copy:polyfills": "cp -r app/polyfills build/polyfills",
    "copy:index": "cp app/index.tmpl.html build/index.html",
    "copy:fonts": "cp -r app/fonts build/fonts",
    "copy:images": "cp -r app/img build && cp app/vendor/pagedown/assets/wmd-buttons.png build/css",
    "copy": "npm run copy:locales && npm run copy:templates && npm run copy:polyfills && npm run copy:index && npm run copy:images && npm run copy:fonts",
    "cachebust:locales": "dt=$(date +%s) && mv build/locales build/locales-$dt && sed -i '' \"s/\\/locales\\//\\/locales-$dt\\//g\" ./build/*.js",
    "cachebust:templates": "hashmark -c build -r -l 6 'templates/**/*.*' '{dir}/{name}-{hash}{ext}' > ./build/build.json && replaceinfiles -s './build/templates/**/*' -d '{dir}/{base}' < ./build/build.json && replaceinfiles -s './build/**/*.js' -d '{dir}/{base}' < ./build/build.json && replaceinfiles -s './build/index.html' -d '{dir}/{base}' < ./build/build.json && rm ./build/build.json",
    "cachebust:css": "hashmark -c build -r -l 6 '/css/*.css' '{dir}/{name}-{hash}{ext}' | sed 's/\"css\\//\"/g' > ./build/build.json && replaceinfiles -s 'build/**/*.{js,css,html}' -d '{dir}/{base}' < ./build/build.json && replaceinfiles -s './build/index.html' -d '{dir}/{base}' < ./build/build.json && rm ./build/build.json",
    "cachebust:js": "hashmark -c build -r -l 6 '*.js' '{dir}/{name}-{hash}{ext}' | sed 's/:\"/:\"/g' > ./build/build.json && replaceinfiles -s 'build/index.html' -d '{dir}/{base}' < ./build/build.json && sed -i '' 's/\\/css\\//\\/css\\//g' build/index.html && rm ./build/build.json",
    "cachebust": "npm run cachebust:locales && npm run cachebust:templates && npm run cachebust:css && npm run cachebust:js",
    "build": "npm run clean && npm run setup && npm run compile && npm run concat && npm run minify && npm run copy && npm run cachebust",
    "build:dev": "npm run compile",
    "watch": "wr \"npm run compile\" app/sass"
  }
}
