angular.module("madisonApp.controllers",[]),angular.module("madisonApp.controllers").controller("AppController",["$scope","ipCookie","UserService",function($scope,ipCookie,UserService){$scope.$on("userUpdated",function(){$scope.user=UserService.user}),UserService.getUser(),$scope.step_messages={step_0:"Welcome to Madison!  Help create better policy in your community.  Click Next to continue.",step_1:"Getting Started:  Choose a policy document.  You can browse, or filter by title, category, sponsor, or status. Go ahead, choose one!",step_2:"Next, dive in! Scroll or use the Table of Contents to get to the good stuff.",step_3:"Share ideas and questions with the document sponsor and other users in the Discussion tab.",step_4:"Suggest specific changes to the text.  Just highlight part of the document and add your thoughts!"},$scope.currentStep=ipCookie("myTour")||0,$scope.stepComplete=function(){ipCookie("myTour",$scope.currentStep,{path:"/",expires:3650})},$scope.tourComplete=function(){ipCookie("myTour",99,{path:"/",expires:3650})}}]),angular.module("madisonApp.controllers").controller("HomePageController",["$scope","$filter","Doc",function($scope,$filter,Doc){$scope.docs=[],$scope.categories=[],$scope.sponsors=[],$scope.statuses=[],$scope.dates=[],$scope.dateSort="",$scope.select2="",$scope.docSort="created_at",$scope.reverse=!0,$scope.startStep=0,Doc.query(function(data){$scope.parseDocs(data)}).$promise["catch"](function(data){console.error("Unable to get documents: %o",data)}),$scope.select2Config={multiple:!0,allowClear:!0,placeholder:"Filter documents by category, sponsor, or status"},$scope.dateSortConfig={allowClear:!0,placeholder:"Sort By Date"},$scope.parseDocs=function(docs){angular.forEach(docs,function(doc){$scope.docs.push(doc),$scope.parseDocMeta(doc.categories,"categories"),$scope.parseDocMeta(doc.sponsor,"sponsors"),$scope.parseDocMeta(doc.statuses,"statuses"),angular.forEach(doc.dates,function(date){date.date=Date.parse(date.date)})})},$scope.parseDocMeta=function(collection,name){0!==collection.length&&angular.forEach(collection,function(item){var found=$filter("getById")($scope[name],item.id);if(null===found)switch(name){case"categories":$scope.categories.push(item);break;case"sponsors":$scope.sponsors.push(item);break;case"statuses":$scope.statuses.push(item);break;default:console.error("Unknown meta name: "+name)}})},$scope.docFilter=function(doc){var show=!1;if(void 0!==$scope.select2&&""!==$scope.select2){var cont=!0,select2=$scope.select2.split("_"),type=select2[0],value=parseInt(select2[1],10);switch(type){case"category":angular.forEach(doc.categories,function(category){+category.id===value&&cont&&(show=!0,cont=!1)});break;case"sponsor":angular.forEach(doc.sponsor,function(sponsor){+sponsor.id===value&&cont&&(show=!0,cont=!1)});break;case"status":angular.forEach(doc.statuses,function(status){+status.id===value&&cont&&(show=!0,cont=!1)})}}else show=!0;return show}}]),angular.module("madisonApp.directives",[]).directive("profileCompletionMessage",["$http",function($http){return{restrict:"A",templateUrl:"/templates/profile-completion-message.html",link:function(scope){scope.updateEmail=function(newEmail,newPassword){$http.put("/api/user/"+scope.user.id+"/edit/email",{email:newEmail,password:newPassword}).success(function(){scope.user.email=newEmail}).error(function(data){console.error("Error updating user email: %o",data)})}}}}]).directive("docComments",function(){return{restrict:"AECM",templateUrl:"/templates/doc-comments.html"}}).directive("ngBlur",function(){return function(scope,elem,attrs){elem.bind("blur",function(){scope.$apply(attrs.ngBlur)})}}).directive("docLink",function($http,$compile){function link(scope,elem,attrs){$http.get("/api/docs/"+attrs.docId).success(function(data){var html='<a href="/docs/'+data.slug+'">'+data.title+"</a>",e=$compile(html)(scope);elem.replaceWith(e)}).error(function(data){console.error("Unable to retrieve document %o: %o",attrs.docId,data)})}return{restrict:"AECM",link:link}}).directive("docListItem",function(){return{restrict:"A",templateUrl:"/templates/doc-list-item.html"}}).directive("annotationItem",["growl",function(growl){return{restrict:"A",transclude:!0,templateUrl:"/templates/annotation-item.html",compile:function(){return{post:function(scope,element,attrs){var commentLink=element.find(".comment-link").first(),linkPath=window.location.origin+window.location.pathname+"#"+attrs.activityItemLink;$(commentLink).attr("data-clipboard-text",linkPath);var client=new ZeroClipboard(commentLink);client.on("aftercopy",function(){scope.$apply(function(){growl.addSuccessMessage("Link copied to clipboard.")})})}}}}}]).directive("commentItem",["growl",function(growl){return{restrict:"A",transclude:!0,templateUrl:"/templates/comment-item.html",compile:function(){return{post:function(scope,element,attrs){var commentLink=element.find(".comment-link").first(),linkPath=window.location.origin+window.location.pathname+"#"+attrs.activityItemLink;$(commentLink).attr("data-clipboard-text",linkPath);var client=new ZeroClipboard(commentLink);client.on("aftercopy",function(){scope.$apply(function(){growl.addSuccessMessage("Link copied to clipboard.")})})}}}}}]).directive("subcommentLink",["growl","$anchorScroll","$timeout",function(growl,$anchorScroll,$timeout){return{restrict:"A",template:'<span class="glyphicon glyphicon-link" title="Copy link to clipboard"></span>',compile:function(){return{post:function(scope,element,attrs){var commentLink=element,linkPath=window.location.origin+window.location.pathname+"#subcomment_"+attrs.subCommentId;$(commentLink).attr("data-clipboard-text",linkPath);var client=new ZeroClipboard(commentLink);client.on("aftercopy",function(){scope.$apply(function(){growl.addSuccessMessage("Link copied to clipboard.")})}),$timeout(function(){$anchorScroll()},0)}}}}}]).directive("activitySubComment",["growl","$anchorScroll","$timeout",function(growl,$anchorScroll,$timeout){return{restrict:"A",transclude:!0,templateUrl:"/templates/activity-sub-comment.html",compile:function(){return{post:function(scope,element,attrs){var commentLink=element.find(".subcomment-link").first(),linkPath=window.location.origin+window.location.pathname+"#annsubcomment_"+attrs.subCommentId;$(commentLink).attr("data-clipboard-text",linkPath);var client=new ZeroClipboard(commentLink);client.on("aftercopy",function(){scope.$apply(function(){growl.addSuccessMessage("Link copied to clipboard.")})}),$timeout(function(){$anchorScroll()},0)}}}}}]).directive("socialLogin",[function(){return{restrict:"A",scope:{message:"@message"},templateUrl:"/templates/social-login.html"}}]).directive("updateTitle",["$rootScope","$timeout",function($rootScope,$timeout){return{link:function(scope,element){var listener=function(event,toState){var title="Madison";toState.data&&toState.data.title&&(title=toState.data.title),$timeout(function(){element.text(title)},0,!1)};$rootScope.$on("$stateChangeSuccess",listener)}}}]).directive("accountDropdown",["UserService","AuthService","$location","growl",function(UserService,AuthService,$location,growl){return{scope:!0,link:function(scope){scope.$watch(function(){return UserService.user},function(newVal){scope.user=newVal}),scope.logout=function(){var logout=AuthService.logout();logout.then(function(){growl.addSuccessMessage("You have been successfully logged out."),UserService.getUser(),$location.path("/")})}},templateUrl:"/templates/partials/account-dropdown.html"}}]),angular.module("madisonApp.filters",[]).filter("parseDate",function(){return function(date){return Date.parse(date)}}).filter("toArray",function(){return function(obj){return obj instanceof Object?_.map(obj,function(val,key){return val.$key=key,val}):obj}}).filter("gravatar",function(){return function(email){var hash="";return void 0!==email&&(hash=CryptoJS.MD5(email.toLowerCase())),hash}}).filter("getById",function(){return function(input,id){var i=0,len=input.length;for(i;len>i;i++)if(+input[i].id===+id)return input[i];return null}}),angular.module("madisonApp.resources",[]).factory("Doc",function($resource){return $resource("/api/docs/:id")}),angular.module("madisonApp.services",[]).factory("UserService",["$rootScope","$http",function($rootScope,$http){var UserService={};return UserService.user={},UserService.getUser=function(){UserService.exists=$http.get("/api/user/current").success(function(data){UserService.user=data.user,$rootScope.$broadcast("userUpdated")})},UserService}]).factory("AuthService",["$http","$sanitize",function($http,$sanitize){return{login:function(credentials){var login=$http.post("/api/user/login",credentials);return login},logout:function(){var logout=$http.get("/api/user/logout");return logout},signup:function(credentials){var signup=$http.post("/api/user/signup",credentials);return signup}}}]).factory("createLoginPopup",["$document","$timeout",function($document,$timeout){var body=$document.find("body"),html=$document.find("html"),attach_handlers=function(){html.on("click.popup",function(){$(".popup").remove(),html.off("click.popup")})},ajaxify_form=function(inForm,callback){var form=$(inForm);form.submit(function(e){e.preventDefault(),$.post(form.attr("action"),form.serialize(),function(response){if(response.errors&&Object.keys(response.errors).length){var error_html=$("<ul></ul>");$(response.errors).each(function(i,key){error_html.append("<li>"+response.errors[key][0]+"</li>")}),form.find(".errors").html(error_html)}else callback(response)})})};return function(event){console.log(event);var popup=$('<div class="popup unauthed-popup"><p>Please log in.</p><input type="button" id="login" value="Login" class="btn btn-primary"/><input type="button" id="signup" value="Sign up" class="btn btn-primary" /></div>');popup.on("click.popup",function(event){event.stopPropagation()}),$("#login",popup).click(function(event){event.stopPropagation(),event.preventDefault(),$.get("/api/user/login/",{},function(data){data=$(data),ajaxify_form(data.find("form"),function(){$("html").trigger("click.popup"),location.reload(!1)}),popup.html(data)})}),$("#signup",popup).click(function(event){event.stopPropagation(),event.preventDefault(),$.get("/api/user/signup/",{},function(data){data=$(data),ajaxify_form(data.find("form"),function(result){$("html").trigger("click.popup"),alert(result.message)}),popup.html(data)})}),body.append(popup);var position={top:event.clientY-popup.height(),left:event.clientX};popup.css(position).css("position","absolute"),popup.css("z-index","999"),$timeout(function(){attach_handlers()},50)}}]).factory("annotationService",function($rootScope,$sce){var annotationService={},converter=new Markdown.Converter;return annotationService.annotations=[],annotationService.setAnnotations=function(annotations){angular.forEach(annotations,function(annotation){annotation.html=$sce.trustAsHtml(converter.makeHtml(annotation.text)),this.annotations.push(annotation)},this),this.broadcastUpdate()},annotationService.addAnnotation=function(annotation){if(void 0===annotation.id)var interval=window.setInterval(function(){this.addAnnotation(annotation),window.clearInterval(interval)}.bind(this),500);else annotation.html=$sce.trustAsHtml(converter.makeHtml(annotation.text)),this.annotations.push(annotation),this.broadcastUpdate()},annotationService.broadcastUpdate=function(){$rootScope.$broadcast("annotationsUpdated")},annotationService}).service("modalService",["$modal",function($modal){var modalDefaults={backdrop:!0,keyboard:!0,modalFade:!0,templateUrl:"/templates/modal.html"},modalOptions={closeButtonText:"Close",actionButtonText:!1,headerText:"Notice",bodyText:"Hmm... someone forgot the content here..."};this.showModal=function(customModalDefaults,customModalOptions){return customModalDefaults||(customModalDefaults={}),customModalDefaults.backdrop=!0,this.show(customModalDefaults,customModalOptions)},this.show=function(customModalDefaults,customModalOptions){var tempModalDefaults={},tempModalOptions={};return angular.extend(tempModalDefaults,modalDefaults,customModalDefaults),angular.extend(tempModalOptions,modalOptions,customModalOptions),tempModalDefaults.controller||(tempModalDefaults.controller=function($scope,$modalInstance){$scope.modalOptions=tempModalOptions,$scope.modalOptions.ok=function(result){$modalInstance.close(result)},$scope.modalOptions.close=function(){$modalInstance.dismiss("cancel")}}),$modal.open(tempModalDefaults).result}}]),window.jQuery=window.$;var imports=["madisonApp.filters","madisonApp.services","madisonApp.resources","madisonApp.directives","madisonApp.controllers","ui","ui.router","ngAnimate","ngSanitize","angular-growl","ngResource","angular-tour","ipCookie"];imports.forEach(function(dependency){try{var m=angular.module(dependency);console.log("loaded %s",m.name)}catch(err){console.error(err)}});try{var app=angular.module("madisonApp",imports)}catch(err){console.log(err)}var xhReq=new XMLHttpRequest;xhReq.open("GET","/auth/token",!1),xhReq.send(null),app.constant("CSRF_TOKEN",xhReq.responseText),history.pushState||window.location.hash&&window.location.replace("/"!==window.location.pathname?"/#"+window.location.hash.substr(1):"/#"+window.location.pathname);try{app.config(["growlProvider","$httpProvider","$stateProvider","$urlRouterProvider",function(growlProvider,$httpProvider,$stateProvider,$urlRouterProvider){growlProvider.messagesKey("messages"),growlProvider.messageTextKey("text"),growlProvider.messageSeverityKey("severity"),growlProvider.onlyUniqueMessages(!0),growlProvider.globalTimeToLive(5e3),$httpProvider.interceptors.push(growlProvider.serverMessagesInterceptor),$urlRouterProvider.otherwise("404"),$stateProvider.state("index",{url:"/",controller:"HomePageController",templateUrl:"/templates/pages/home.html",data:{title:"Madison Home"}}).state("login",{url:"/user/login",controller:"LoginPageController",templateUrl:"/templates/pages/login.html",data:{title:"Login to Madison"}}).state("signup",{url:"/user/signup",controller:"SignupPageController",templateUrl:"/templates/pages/signup.html",data:{title:"Signup for Madison"}}).state("password-reset",{url:"/password/reset",controller:"PasswordResetController",templateUrl:"/templates/pages/password-reset.html",data:{title:"Password Reset"}}).state("faq",{url:"/faq",templateUrl:"/templates/pages/faq.html",data:{title:"Frequently Asked Questions"}}).state("about",{url:"/about",templateUrl:"/templates/pages/about.html",data:{title:"About Madison"}}).state("privacy-policy",{url:"/privacy-policy",templateUrl:"/templates/pages/privacy-policy.html",data:{title:"Privacy Policy"}}).state("copyright",{url:"/copyright",templateUrl:"/templates/pages/copyright.html",data:{title:"Copyright Policy"}}).state("terms-and-conditions",{url:"/terms-and-conditions",templateUrl:"/templates/pages/terms-and-conditions.html",data:{title:"Terms and Conditions"}}).state("user-notification-settings",{url:"/user/edit/:user/notifications",controller:"UserNotificationsController",templateUrl:"/templates/pages/user-notification-settings.html",data:{title:"Notification Settings"}}).state("404",{url:"/404",templateUrl:"/templates/pages/404.html",data:{title:"Here Be Dragons"}})}])}catch(err){console.error(err)}app.config(["$locationProvider",function($locationProvider){$locationProvider.html5Mode(!0)}]),window.console=window.console||{},window.console.log=window.console.log||function(){};